<%= render(:partial => 'topmenu')%>
<%= render(:partial => 'infomenu')%>

<% if @community.new_record? -%>
<h3>New Community</h3>
<% else -%>
<h3><%=raw @community.fullname %> - Edit Community Info</h3>
<% end -%>

<%= semantic_form_for( @community, :html => { :multipart => true } ) do |f| %>

	<%= f.inputs do %>
    <% if @community.new_record? -%>
		<%= f.input :tagname, as: :string, label: 'Short name' %>
    <% end -%>
  
		<%= f.input :fullname, as: :string, label: 'Long name' %>
    
    <%= f.input :active, label: "Active/Public" %>	
    
    <li class="text input optional" id="community_description_input"><label for="community_description" class="label">Description</label><textarea rows="2" id="community_description" name="community[description]"><%= @community.description %></textarea><br><label>&nbsp;</label>(basic HTML ok)
    </li>
		
    <% if current_participant.sysadmin %>
  		<%= f.input :visibility, label: "Privacy", as: :select, collection: COM_VISIBILITY_TEXT.collect {|x| [x[1],x[0]]}, include_blank: false %>
    <% else %>
      <%= f.input :visibility, label: "Privacy", as: :select, collection: {'Public'=>'public'}, include_blank: false %>
    <% end %>
    Only the system administrator can add private communities.<br><br>

		<% if @community.visibility != 'public' -%>
      <%= f.input :message_visibility, label: "Post visibility", as: :select, collection: COM_MESSAGE_VISIBILITY_TEXT_PRIVATE.collect {|x| [x[1],x[0]]}, include_blank: false %>
    <% else %>
      <%= f.input :message_visibility, label: "Post visibility", as: :select, collection: COM_MESSAGE_VISIBILITY_TEXT_PUBLIC.collect {|x| [x[1],x[0]]}, include_blank: false, disabled: true %>
    <% end -%>

		<%= f.input :logo, :as=>:file %>	

		<%= f.input :autotags, as: :string, label: "Auto #tags", input_html: {size: 45} %>

    <% if not @community.new_record? -%>
    
  		<% f.input :front_template, :label => "Front Page template" %>
  		<li class="text optional" id="community_front_template_input">
  			<label for="community_front_template">Front Page template<br>
  			<%= button_to_function "get default", "get_default('front')" %><br>
  			<%= button_to_function "test", "test_template('front')" %>
  			</label>
  			<textarea id="community_front_template" name="community[front_template]" rows="5"><%= @community.front_template %></textarea>
  		</li>

  		<% f.input :invite_template, :label => "Invitation e-mail template" %>
  		<li class="text optional" id="community_invite_template_input">
  			<label for="community_invite_template">Invitation e-mail template<br>
  			<%= button_to_function "get default", "get_default('invite')" %><br>
  					<%= button_to_function "test", "test_template('invite')" %>
  			</label>
  			<textarea id="community_invite_template" name="community[invite_template]" rows="5"><%= @community.invite_template %></textarea>
  		</li>

    <% end -%>

	<% end %>

	<p>
	  <input type="button" value="Cancel" onclick="window.location='/communities/<%= @community.id %>/'" />
	  <input type="submit" value="Save" />
	</p>

<% end %>

<% if not @community.new_record? -%>

  <h3><br>Moderators</h3>

  <div id="modbox">
  <%= render(partial: 'adminsedit')%>
  </div>

  <p><a href="javascript:add_admin()">Add</a>: <%= select_tag :new_admin, options_from_collection_for_select(@members, "id", "name") %> | <a href="javascript:del_admin()">Delete marked</a></p>

  <h3><br>Sub-communities</h3>

  <div id="subbox">
  <%= render(partial: 'sublist')%>
  </div>

  <p><a href="javascript:addsub()">Add</a>: <input type="text" style="width: 100px" id="sub2add" maxlength="14"> | <a href="javascript:remsub()">Delete marked</a></p>

<% end %>
  


<script>
var curid1 = <%= @community.id %>;
function list2() {
    $('#modbox').css('opacity','0.5');
	showworking();
	$.ajax({
     type: "GET",
     url: "/communities/" + curid1 + "/admins",
     complete: function(t){	
       $("#modbox").html(t.responseText);
       hideworking();
       $('#modbox').css('opacity','1.0');
     }
   });	
}
function add_admin() {
	var id = $('#new_admin').val();
    $('#modbox').css('opacity','0.5');
	$.ajax({
    type: 'POST',
    url: "/communities/" + curid1 + "/admin_add",
    data: "participant_id="+id,
    complete: function(t){	
      $("#modbox").html(t.responseText);
      $('#modbox').css('opacity','1.0');
     }
   });		
}
function del_admin() {
    var pars = "communities_id="+curid1;
	var marks = $('input.admmark');
    var xcount = 0;
  for (var x=0;x<marks.length;x++) {
    var mark = marks[x];
    if (mark.checked) {
      var participant_id = mark.value;
      pars += "&participant_ids[]=" + participant_id;
      xcount++;
    }
  }
  if (xcount==0) {
    alert("You didn't select any moderators");
    return;
  } else if (xcount>0) {
    if (!confirm("Delete "+xcount+" moderators?")) {
      return;
    }
  }
  $('#modbox').css('opacity','0.5');
  pars += "&authenticity_token=<%= form_authenticity_token %>";
	$.ajax({
    type: 'DELETE',
    url: "/communities/" + curid1 + "/admin_del",
    data: pars,
    complete: function(t){	
      $("#modbox").html(t.responseText);
      $('#modbox').css('opacity','1.0');
     }
   });	
}

var allmarked = false;
function markall() {
	var marks = $('input.cammark');
	for (var x=0;x<marks.length;x++) {
		var mark = marks[x];
		if (allmarked) {
			mark.checked = false;
		} else {
			mark.checked = true;
		}	
	}
	if (allmarked) {
		allmarked = false;
	} else {
		allmarked = true;
	}
}
function get_default(which) {
	if (!$('#community_'+which+'_template')) {
		alert("That doesn't seem to exist");
		return;
	} else if ($('#community_'+which+'_template').val()!='') {
		alert("Please empty the template field first, if you wish to overwrite it with the default");
		return;
	}
	var pars = "which="+which;
	$.ajax({
     type: "GET",
     url: "/communities/<%= @community.id %>/get_default",
     data: pars,
     complete: function(t){	
       $('#community_'+which+'_template').val(t.responseText);
     }
   });	
}
function test_template(which) {
	//if ($('#group_'+which+'_template').val()=='') {
	//	alert("There's no template to test");
	//	return;
	//}	
	window.open("/communities/<%= @community.id %>/test_template?which="+which, '_blank');
}
function addsub() {
  var tagname = $('#sub2add').val();
  $('#subbox').css('opacity','0.5');
	$.ajax({
    type: 'POST',
    url: "/communities/" + curid1 + "/sub_add",
    data: "tagname="+tagname,
    complete: function(t){	
      $("#subbox").html(t.responseText);
      $('#subbox').css('opacity','1.0');
      $('#sub2add').val('');
     }
   });		
}
function remsub() {
  var pars = "communities_id="+curid1;
  var marks = $('input.submark');
  var xcount = 0;
  for (var x=0;x<marks.length;x++) {
    var mark = marks[x];
    if (mark.checked) {
      var sub_id = mark.value;
      pars += "&sub_ids[]=" + sub_id;
      xcount++;
    }
  }
  if (xcount==0) {
    alert("You didn't select any sub-communities");
    return;
  } else if (xcount>0) {
    if (!confirm("Delete "+xcount+" sub-communities?")) {
      return;
    }
  }
  $('#subbox').css('opacity','0.5');
  pars += "&authenticity_token=<%= form_authenticity_token %>";
  $.ajax({
    type: 'DELETE',
    url: "/communities/" + curid1 + "/sub_del",
    data: pars,
    complete: function(t){	
      $("#subbox").html(t.responseText);
      $('#subbox').css('opacity','1.0');
     }
  });	
}

</script>